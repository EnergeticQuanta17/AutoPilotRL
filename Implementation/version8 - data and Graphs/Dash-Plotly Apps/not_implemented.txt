1. Size of the point according to an attribute and different colors for another attribute and the usual x and y axis
    fig = px.scatter(df, x="gdp per capita", y="life expectancy",
                 size="population", color="continent", hover_name="country",
                 log_x=True, size_max=60)
    
    With slider --> this lags if current computational power is less

2. Can use dictionaries to do inline HTML
    colors = {
        'background': '#111111',
        'text': '#7FDBFF'
    }

    fig.update_layout(
        plot_bgcolor=colors['background'],
        paper_bgcolor=colors['background'],
        font_color=colors['text']
    )

3.  Multi-Select Dropdown
    Checkboxes
    Text Input
    Slider

    https://dash.plotly.com/layout

4. Multi-outputs
    Just put comma while returning

5. Chained Callbacks

6. Dash App With State
    @app.callback(Output('output-state', 'children'),
            Input('submit-button-state', 'n_clicks'),
            State('input-1-state', 'value'),
            State('input-2-state', 'value'))
    )

7. Interactive Visualizations
    Hover Data
    Click Data
    Selection Data
    Zoom and Relayout Data

8. Update graphs on Hover
    Hovering over points on one graph changes the plot of other graph/graphs
    Example also has "Year" slider

9. Generic Crossfilter Recipe
    2nd way to Visualize high dimensional data apart from parallel-coordinates

10. Dash can handle multi-user environment
    gunicorn --workers 4 app:server

11. https://dash.plotly.com/sharing-data-between-callbacks

12. Storing data in the Browser, User Based Session Data
13. Displaying Errors with dash.no_update
14. Determining which Input Has Fired with dash.callback_context

15. Improving Performance with Memoization
    import time
    import functools32

    @functools32.lru_cache(maxsize=32)
    def slow_function(input):
        time.sleep(10)
        return 'Input was {}'.format(input)

16. As an Indirect Result of User Interaction
17. Prevent Callback Execution Upon Initial Component Render
18. Circular Callbacks == OMG THIS IS SOOO COOOL

19. Number Input
    dcc.Input(
        id="celsius",
        value=0.0,
        type="number"
    ),

20. Synchronizing Two Checklists - Synchronizing with "All" button

21. https://dash-example-index.herokuapp.com/animations
    Animations with scatter (bigger scatter bubble)

22. helps to use clientside when intervals are very frequent - dcc.Interval

23. https://plotly.com/python/wind-rose-charts/

24. 


21. CONTINUE READING FROM https://dash.plotly.com/clientside-callbacks
22. 
23. 
24. 
25. 
26. 
27. 
28. 
29. 
30. 